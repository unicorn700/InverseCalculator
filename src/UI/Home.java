/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

/**
 *
 * @author unicorn
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        jTextArea1.setLineWrap(true);
        jTextArea1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Type the number:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Result:");

        jTextArea1.setColumns(20);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Calculations cl = new Calculations();
        Thread th = new Thread(cl);
        th.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

 private class Calculations extends Thread
 {
     @Override
     public void run()
     {
            try
            {
                int multiplicant,seed = 0;
                int num = Integer.parseInt(jTextField1.getText());
                if(num < 1)
                {
                    jTextArea1.setText("Please Enter number greater than zero");
                    return;
                }

                int unitD = num % 10;
                int tensD = num / 10;
                multiplicant = -1;
                jTextArea1.setText(null);

                switch(unitD)
                {
                    case 1:
                    multiplicant = num - tensD;
                    seed = 9;
                    break;

                    case 3:
                    multiplicant = unitD * tensD + 1;
                    seed = 3;
                    break;

                    case 7:
                    multiplicant = unitD * tensD + 5;
                    seed = 7;
                    break;

                    case 9:
                    multiplicant = tensD + 1;
                    seed = 1;
                    break;
                    default:
                    jTextArea1.setText("Not applicable for this number");
                }
                if(multiplicant != -1)
                {
                int carry = 0;
                int previous = seed;
                int temp =0;

                do
                {
                    jTextArea1.setText(previous+jTextArea1.getText());
                    temp = previous * multiplicant + carry;
                    carry = temp / 10;
                    previous = temp % 10;
                }while((carry != 0) || (previous != seed));

                jTextArea1.setText("0."+jTextArea1.getText()+"...");

                }
                else {
                    jTextArea1.setText("Not Applicable for this number");
                }
            }
            catch(Exception e)
            {
                jTextArea1.setText("Error:"+e.getMessage());
            }
     }
 }
private void calculateInverse()
{
    int multiplicant,seed = 0;
    int num = Integer.parseInt(jTextField1.getText());
    
    int unitD = num % 10;
    int tensD = num / 10;
    multiplicant = -1;
    
    switch(unitD)
    {
        case 1:
        multiplicant = num - tensD;
        seed = 9;
        break;

        case 3:
        multiplicant = unitD * tensD + 1;
        seed = 3;
        break;

        case 7:
        multiplicant = unitD * tensD + 5;
        seed = 7;
        break;

        case 9:
        multiplicant = tensD + 1;
        seed = 1;
        break;
        default:
        jTextArea1.setText("Not applicable for this number");
    }
    if(multiplicant != -1)
    {
    int carry = 0;
    int previous = seed;
    int temp =0;
    
    do
    {
        jTextArea1.setText(previous+jTextArea1.getText());
        temp = previous * multiplicant + carry;
        carry = temp / 10;
        previous = temp % 10;
    }while((carry != 0) || (previous != seed));
    jTextArea1.setText("0.0"+jTextArea1.getText());
    
    }
    else {
        jTextArea1.setText("Not Applicable for this number");
    }
}


}
